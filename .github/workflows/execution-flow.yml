name: Website Deployment

on: workflow_dispatch

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        # odpala się jeśli cache nie istnieje
        if: steps.cache.outputs.cache-hit != "true"
        run: npm ci
      - name: Lint code
        run: npm run lint

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        # odpala się jeśli cache nie istnieje
        if: steps.cache.outputs.cache-hit != "true"
        run: npm ci
      - name: Test code
        # jeśli się krok nie powiedzie, następny będzie odpalony i job traktowany jako sukces jeśli dalej nie pojawią się kolejne błędy
        continue-on-error: true
        id: run-tests
        run: npm run test
      - name: Upload test report
        # odpala się jeśli "run-tests" będzie miał błędy
        if: failure() && steps.run-tests.outcome == "failure"
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: test.json

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        # odpala się jeśli cache nie istnieje
        if: steps.cache.outputs.cache-hit != "true"
        run: npm ci
      - name: Build website
        id: build-website
        run: npm run build
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist-files
          path: dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get build artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist-files
      - name: Output contents
        run: ls
      - name: Deploy
        run: echo "Deploying..."

  report:
    needs: [lint, deploy]
    # odpali się jeśli lint i deploy zostaną zainicjalizowane i któryś z ich kroków zakończy się niepowodzeniem
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: output informations
        run: |
          echo "something went wrong"
          echo "${{ toJSON(github) }}"
